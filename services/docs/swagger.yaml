basePath: /api/v1
definitions:
  internal_interfaces_http_handler.HealthResponse:
    properties:
      services:
        additionalProperties:
          type: string
        type: object
      status:
        example: healthy
        type: string
      timestamp:
        example: "2023-01-01T12:00:00Z"
        type: string
      version:
        example: 1.0.0
        type: string
    type: object
  response.PageData:
    properties:
      items: {}
      page:
        description: 当前页
        type: integer
      page_size:
        description: 每页大小
        type: integer
      total:
        description: 总数量
        type: integer
      total_pages:
        description: 总页数
        type: integer
    type: object
  response.Response:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
  services_internal_domain_user_valueobject.Gender:
    enum:
    - 100
    - 200
    - 300
    type: integer
    x-enum-comments:
      GenderFemale: 女性
      GenderMale: 男性
      GenderOther: 其他
    x-enum-descriptions:
    - 男性
    - 女性
    - 其他
    x-enum-varnames:
    - GenderMale
    - GenderFemale
    - GenderOther
  services_internal_interfaces_http_dto_request.CreateUserRequest:
    properties:
      gender:
        allOf:
        - $ref: '#/definitions/services_internal_domain_user_valueobject.Gender'
        example: 100
      name:
        example: 张三
        maxLength: 50
        type: string
      open_id:
        example: wx_123456789
        type: string
      password:
        example: password123
        minLength: 6
        type: string
      phone_number:
        example: "13800138000"
        type: string
    required:
    - gender
    - name
    - open_id
    - password
    - phone_number
    type: object
  services_internal_interfaces_http_dto_request.LoginRequest:
    properties:
      password:
        example: password123
        type: string
      phone_number:
        example: "13800138000"
        type: string
    required:
    - password
    - phone_number
    type: object
  services_internal_interfaces_http_dto_request.WeChatLoginRequest:
    properties:
      code:
        example: wx_auth_code_123456
        type: string
    required:
    - code
    type: object
  services_internal_interfaces_http_dto_response.UserInfoResponse:
    properties:
      created_at:
        example: 1640995200
        type: integer
      gender:
        example: 200
        type: integer
      id:
        example: user_123456789
        type: string
      name:
        example: 张三
        type: string
      open_id:
        example: wx_123456789
        type: string
      phone_number:
        example: "13800138000"
        type: string
      updated_at:
        example: 1640995200
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    email: support@example.com
    name: API Support
    url: http://www.example.com/support
  description: 微服务脚手架 API 文档
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: Go Micro Scaffold API
  version: 1.0.0
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: 使用手机号和密码进行用户登录，成功后返回JWT Token
      parameters:
      - description: 登录请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/services_internal_interfaces_http_dto_request.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 登录成功，返回token
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties:
                    type: string
                  type: object
              type: object
        "400":
          description: 请求参数验证失败
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 用户名或密码错误
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/response.Response'
      summary: 用户密码登录
      tags:
      - 认证授权
  /auth/logout:
    post:
      consumes:
      - application/json
      description: 用户登出，使当前Token失效
      produces:
      - application/json
      responses:
        "200":
          description: 登出成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
              type: object
        "401":
          description: 未授权或Token无效
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      summary: 用户登出
      tags:
      - 认证授权
  /auth/wechat:
    post:
      consumes:
      - application/json
      description: 使用微信授权码进行用户登录，成功后返回JWT Token
      parameters:
      - description: 微信登录请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/services_internal_interfaces_http_dto_request.WeChatLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 登录成功，返回token
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties:
                    type: string
                  type: object
              type: object
        "400":
          description: 请求参数验证失败
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 微信授权失败
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/response.Response'
      summary: 微信登录
      tags:
      - 认证授权
  /health:
    get:
      consumes:
      - application/json
      description: 检查系统各个组件的健康状态，包括数据库、Redis等服务的连接状态
      produces:
      - application/json
      responses:
        "200":
          description: 系统健康
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/internal_interfaces_http_handler.HealthResponse'
              type: object
        "503":
          description: 系统不健康
          schema:
            $ref: '#/definitions/response.Response'
      summary: 系统健康检查
      tags:
      - 健康检查
  /users:
    get:
      consumes:
      - application/json
      description: 分页获取用户列表，支持按姓名、性别、时间范围等条件过滤
      parameters:
      - default: 1
        description: 页码
        in: query
        minimum: 1
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        maximum: 100
        minimum: 1
        name: page_size
        type: integer
      - description: 用户姓名（模糊搜索）
        in: query
        maxLength: 50
        name: name
        type: string
      - description: 性别
        enum:
        - 100
        - 200
        - 300
        example: 100
        in: query
        name: gender
        type: integer
      - description: 开始时间
        example: '"2023-01-01"'
        format: date
        in: query
        name: start_time
        type: string
      - description: 结束时间
        example: '"2023-12-31"'
        format: date
        in: query
        name: end_time
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.PageData'
                  - properties:
                      items:
                        items:
                          $ref: '#/definitions/services_internal_interfaces_http_dto_response.UserInfoResponse'
                        type: array
                    type: object
              type: object
        "400":
          description: 请求参数验证失败
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权访问
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      summary: 获取用户列表
      tags:
      - 用户管理
    post:
      consumes:
      - application/json
      description: 创建一个新的用户账户，需要提供用户的基本信息
      parameters:
      - description: 创建用户请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/services_internal_interfaces_http_dto_request.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 创建成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/services_internal_interfaces_http_dto_response.UserInfoResponse'
              type: object
        "400":
          description: 请求参数验证失败
          schema:
            $ref: '#/definitions/response.Response'
        "409":
          description: 用户已存在
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      summary: 创建新用户
      tags:
      - 用户管理
  /users/{id}:
    get:
      consumes:
      - application/json
      description: 根据用户ID获取用户的详细信息
      parameters:
      - description: 用户ID
        example: '"user_123456789"'
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/services_internal_interfaces_http_dto_response.UserInfoResponse'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权访问
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: 用户不存在
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      summary: 获取用户详细信息
      tags:
      - 用户管理
securityDefinitions:
  BearerAuth:
    description: JWT Token，格式：Bearer {token}
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
