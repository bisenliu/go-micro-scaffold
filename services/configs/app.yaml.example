# 系统配置
system:
  # 运行环境 (development/production/test)
  env: "development"
  # 系统密钥，用于JWT签名等安全操作
  secret_key: "your_secret_key_here"
  # 服务名称
  server_name: "services"
  # 系统时区，默认为 "Asia/Shanghai"
  timezone: "Asia/Shanghai"

# 服务器配置
server:
  # 服务端口
  port: "8080"
  # 运行模式(debug/release/test)
  mode: debug
  # 是否开启CORS
  enable_cors: false
  # 请求超时时间(秒) 
  read_timeout: 5s
  # 写入超时时间(秒) 
  write_timeout: 10s
  # 空闲超时(秒)
  idle_timeout: 120s
  # 请求头最大字节数(默认1M)
  maxHeaderBytes: 1048576

# Token配置
token:
  # Token过期时间(分钟)
  expired_time: 30 # 分钟

# 雪花算法配置(用于生成唯一ID)
snow_flake:
  # 起始时间(格式: YYYY-MM-DD)
  start_time: "2024-01-01"
  # 机器ID(0-1023)
  machine_id: 1

# 数据库公共配置
database_common: &database_common
  # 数据库类型(mysql/postgres/sqlite)
  type: "mysql"
  # 数据库主机地址
  host: "127.0.0.1"
  # 数据库端口
  port: 3306
  # 数据库用户名
  username: "your_database_username"
  # 数据库密码
  password: "your_database_password"
  # 字符集
  charset: utf8mb4
  # 最大打开连接数
  max_open_conns: 100
  # 最大空闲连接数
  max_idle_conns: 10
  # 连接最大生命周期
  conn_max_lifetime: 1h
  # 连接最大空闲时间
  conn_max_idle_time: 30m

# 多数据源配置
databases:
  # 数据库实例1
  db1:
    # 继承公共配置，可覆盖特定值
    <<: *database_common
    # 数据库名称
    database: go-micro-scaffold
    
  # 数据库实例2
  db2:
    # 继承公共配置，可覆盖特定值
    <<: *database_common
    # 数据库名称
    database: go-micro-scaffold

# Redis配置
redis:
  # Redis主机地址
  host: "127.0.0.1"
  # Redis端口
  port: 6379
  # Redis密码(如果未设置密码则留空)
  password: "your_redis_password"
  # Redis数据库编号
  database: 0
  # 默认数据库编号
  default_db: 0
  # 连接池大小
  pool_size: 10


# Zap日志配置
zap:
  # 日志级别(DEBUG/INFO/WARN/ERROR/DPANIC/PANIC/FATAL)
  level: "DEBUG"
  # 日志文件目录
  director: "./logs"
  # 日志文件最大保留天数
  max_age: 30
  # 单个日志文件最大大小(MB)
  max_size: 500
  # 最大备份文件数量
  max_backups: 7

# 验证配置
validation:
  # 本地化设置(zh/en等)
  locale: "zh"

# Rate Limit 中间件配置
rate_limit:
  # 是否启用
  enabled: true
  # 令牌桶填充间隔
  fill_interval: 1s
  # 令牌桶容量
  capacity: 100
  # 每次填充的令牌数量
  quantum: 10
  # 过期IP清理间隔
  cleanup_interval: 10m
  # IP过期时间
  bucket_expiry: 30m

# Auth 中间件配置
auth:
  # 认证白名单路径
  whitelist:
    - /health
    - /ping
    - /api/v1/login # 示例：登录接口通常需要被排除