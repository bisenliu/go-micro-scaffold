# Production Environment Configuration
# This file contains production-specific settings with Swagger DISABLED for security

server:
  port: 8080
  mode: "release"
  read_timeout: 30s
  write_timeout: 30s
  idle_timeout: 120s

# Swagger configuration for production (DISABLED)
swagger:
  enabled: false  # CRITICAL: Disabled in production for security
  title: "Go Micro Scaffold API"
  description: "微服务脚手架 API 文档"
  version: "1.0.0"
  host: "api.example.com"
  base_path: "/api/v1"
  schemes: ["https"]

# Database configuration
database:
  driver: "mysql"
  host: "${DB_HOST}"
  port: 3306
  name: "${DB_NAME}"
  user: "${DB_USER}"
  password: "${DB_PASSWORD}"
  max_open_conns: 50
  max_idle_conns: 25
  conn_max_lifetime: 300s
  charset: "utf8mb4"
  parse_time: true
  loc: "Asia/Shanghai"

# Redis configuration
redis:
  host: "${REDIS_HOST}"
  port: 6379
  password: "${REDIS_PASSWORD}"
  db: 0
  pool_size: 50
  min_idle_conns: 20
  dial_timeout: 5s
  read_timeout: 3s
  write_timeout: 3s
  pool_timeout: 4s
  idle_timeout: 300s

# JWT configuration
jwt:
  secret: "${JWT_SECRET}"
  expired_time: 15  # minutes (shorter for production)
  refresh_expired_time: 480  # minutes (8 hours)
  issuer: "go-micro-scaffold"

# Logging configuration
logging:
  level: "warn"
  format: "json"
  output: ["file"]  # Only file output in production
  file_path: "logs/app.log"
  max_size: 100  # MB
  max_backups: 30
  max_age: 90  # days
  compress: true

# System configuration
system:
  timezone: "Asia/Shanghai"
  secret_key: "${SYSTEM_SECRET_KEY}"
  debug: false
  
# CORS configuration
cors:
  allow_origins: ["https://web.example.com", "https://admin.example.com"]
  allow_methods: ["GET", "POST", "PUT", "DELETE"]
  allow_headers: ["Content-Type", "Authorization"]
  expose_headers: ["Content-Length"]
  allow_credentials: true
  max_age: 24h

# Rate limiting (strict in production)
rate_limit:
  enabled: true
  requests_per_minute: 100
  burst: 20

# Middleware configuration
middleware:
  request_logger:
    enabled: true
    skip_paths: ["/health"]
  
  recovery:
    enabled: true
    stack_trace: false  # Never expose stack traces in production
  
  auth:
    skip_paths: ["/health", "/api/v1/auth/login"]
  
  ip_access_control:
    enabled: true
    whitelist: ["10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16"]
    blacklist: []

# Monitoring and metrics
monitoring:
  enabled: true
  prometheus:
    enabled: true
    path: "/metrics"
  
  health_check:
    enabled: true
    path: "/health"
  
  pprof:
    enabled: false  # CRITICAL: Disabled in production for security

# External services
external_services:
  timeout: 15s
  retry_attempts: 2
  retry_delay: 3s

# Security settings (enhanced for production)
security:
  tls:
    enabled: true
    cert_file: "/etc/ssl/certs/production.crt"
    key_file: "/etc/ssl/private/production.key"
    min_version: "1.2"
    cipher_suites: [
      "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384",
      "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305",
      "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"
    ]
  
  headers:
    x_frame_options: "DENY"
    x_content_type_options: "nosniff"
    x_xss_protection: "1; mode=block"
    strict_transport_security: "max-age=63072000; includeSubDomains; preload"
    content_security_policy: "default-src 'self'"
    referrer_policy: "strict-origin-when-cross-origin"

# Performance settings
performance:
  max_request_size: "10MB"
  compression:
    enabled: true
    level: 6
    types: ["application/json", "text/plain", "text/html"]
  
  cache:
    enabled: true
    default_ttl: 300s
    max_entries: 10000

# Alerting and notifications
alerting:
  enabled: true
  error_threshold: 10  # errors per minute
  latency_threshold: 1000  # milliseconds
  webhook_url: "${ALERT_WEBHOOK_URL}"

# Backup and disaster recovery
backup:
  enabled: true
  schedule: "0 2 * * *"  # Daily at 2 AM
  retention_days: 30
  s3_bucket: "${BACKUP_S3_BUCKET}"
  s3_region: "${BACKUP_S3_REGION}"